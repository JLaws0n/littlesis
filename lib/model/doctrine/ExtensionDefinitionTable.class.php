<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ExtensionDefinitionTable extends Doctrine_Table
{
  //MUST KEEP THESE IN PROPER ORDER WHERE KEY IS THE ExtensionDefinition->id
  static $extensionNames = array(
    1 => 'Person',
    2 => 'Org',
    3 => 'PoliticalCandidate',
    4 => 'ElectedRepresentative',
    5 => 'Business',
    6 => 'GovernmentBody',
    7 => 'School',
    8 => 'MembershipOrg',
    9 => 'Philanthropy',
    10 => 'NonProfit',
    11 => 'PoliticalFundraising',
    12 => 'PrivateCompany',
    13 => 'PublicCompany',
    14 => 'IndustryTrade',
    15 => 'LawFirm',
    16 => 'LobbyingFirm',
    17 => 'PublicRelationsFirm',
    18 => 'IndividualCampaignCommittee',
    19 => 'Pac',
    20 => 'OtherCampaignCommittee',
    21 => 'MediaOrg',
    22 => 'ThinkTank',
    23 => 'Cultural',
    24 => 'SocialClub',
    25 => 'ProfessionalAssociation',
    26 => 'PoliticalParty',
    27 => 'LaborUnion',
    28 => 'Gse',
    29 => 'BusinessPerson',
    30 => 'Lobbyist',
    31 => 'Academic',
    32 => 'MediaPersonality',
    33 => 'ConsultingFirm',
    34 => 'PublicIntellectual',
    35 => 'PublicOfficial',
    36 => 'Lawyer',
    37 => 'Couple'
  );  


  static $extensionFields = array(
    1 => array('name_first', 'name_last', 'name_middle', 'name_prefix', 'name_suffix', 'birthplace', 'gender_id', 'party_id', 'is_independent', 'net_worth'),
    2 => array('employees', 'revenue', 'fedspending_id', 'lda_registrant_id'),
    3 => array('is_federal', 'is_state', 'is_local', 'pres_fec_id', 'senate_fec_id', 'house_fec_id'),
    4 => array('bioguide_id', 'govtrack_id', 'crp_id', 'pvs_id', 'watchdog_id'),
    5 => array('annual_profit'),
    6 => array('is_federal', 'state_id', 'city', 'county'),
    7 => array('endowment', 'students', 'faculty', 'tuition', 'is_private'),
    8 => array(),
    9 => array(),
    10 => array(),
    11 => array('fec_id', 'type_id', 'state_id'),
    12 => array(),
    13 => array('ticker', 'sec_cik'),
    14 => array(),
    15 => array(),
    16 => array(),
    17 => array(),
    18 => array(),
    19 => array(),
    20 => array(),
    21 => array(),
    22 => array(),
    23 => array(),
    24 => array(),
    25 => array(),
    26 => array(),
    27 => array(),
    28 => array(),
    29 => array('sec_cik'),
    30 => array('lda_registrant_id'),
    31 => array(),
    32 => array(),
    33 => array(),
    34 => array(),
    35 => array(),
    36 => array(),
    37 => array('partner1_id', 'partner2_id')
  );    
  

  static $extensionNamesWithFields = array(
    'Person',
    'Org',
    'PoliticalCandidate',
    'ElectedRepresentative',
    'Business',
    'School',
    'PublicCompany',
    'GovernmentBody',
    'BusinessPerson',
    'Lobbyist',
    'PoliticalFundraising',
    'Couple'
  );


  static $definitionMap = array(
		'Person' => array('id' => 1, 'display_name' => 'Person'),
		'Org' => array('id' => 2, 'display_name' => 'Organization'),
		'PoliticalCandidate' => array('id' => 3, 'display_name' => 'Political Candidate'),
		'ElectedRepresentative' => array('id' => 4, 'display_name' => 'Elected Representative'),
		'Business' => array('id' => 5, 'display_name' => 'Business'),
		'GovernmentBody' => array('id' => 6, 'display_name' => 'Government Body'),
		'School' => array('id' => 7, 'display_name' => 'School'),
		'MembershipOrg' => array('id' => 8, 'display_name' => 'Membership Organization'),
		'Philanthropy' => array('id' => 9, 'display_name' => 'Philanthropy'),
		'NonProfit' => array('id' => 10, 'display_name' => 'Other Not-for-profit'),
		'PoliticalFundraising' => array('id' => 11, 'display_name' => 'Political Fundraising Committee'),
		'PrivateCompany' => array('id' => 12, 'display_name' => 'Private Company'),
		'PublicCompany' => array('id' => 13, 'display_name' => 'Public Company'),
		'IndustryTrade' => array('id' => 14, 'display_name' => 'Industry/Trade Association'),
		'LawFirm' => array('id' => 15, 'display_name' => 'Law Firm'),
		'LobbyingFirm' => array('id' => 16, 'display_name' => 'Lobbying Firm'),
		'PublicRelationsFirm' => array('id' => 17, 'display_name' => 'Public Rleations Firm'),
		'IndividualCampaignCommittee' => array('id' => 18, 'display_name' => 'Individual Campaign Committee'),
		'Pac' => array('id' => 19, 'display_name' => 'PAC'),
		'OtherCampaignCommittee' => array('id' => 20, 'display_name' => 'Other CampaignCommittee'),
		'MediaOrg' => array('id' => 21, 'display_name' => 'Media Organization'),
		'ThinkTank' => array('id' => 22, 'display_name' => 'Policy/Think Tank'),
		'Cultural' => array('id' => 23, 'display_name' => 'Cultural/Arts'),
		'SocialClub' => array('id' => 24, 'display_name' => 'Social Club'),
		'ProfessionalAssociation' => array('id' => 25, 'display_name' => 'Professional Association'),
		'PoliticalParty' => array('id' => 26, 'display_name' => 'Political Party'),
		'LaborUnion' => array('id' => 27, 'display_name' => 'Labor Union'),
		'Gse' => array('id' => 28, 'display_name' => 'Government-Sponsored Enterprise'),
		'BusinessPerson' => array('id' => 29, 'display_name' => 'Business Person'),
		'Lobbyist' => array('id' => 30, 'display_name' => 'Lobbyist'),
		'Academic' => array('id' => 31, 'display_name' => 'Academic'),
		'MediaPersonality' => array('id' => 32, 'display_name' => 'Media Personality'),
		'ConsultingFirm' => array('id' => 33, 'display_name' => 'Consulting Firm'),		
		'PublicIntellectual' => array('id' => 34, 'display_name' => 'Public Intellectual'),
		'PublicOfficial' => array('id' => 35, 'display_name' => 'Public Official'),
		'Lawyer' => array('id' => 36, 'display_name' => 'Lawyer'),
    'Couple' => array('id' => 37, 'display_name' => 'Couple')
  );


  static function getByTierQuery($tier, $parent=null, $havingFields=null)
  {
    $q = LsDoctrineQuery::create()
      ->from('ExtensionDefinition d')
      ->orderBy('d.id ASC');      

    if (is_array($tier))
    {
      $q->whereIn('d.tier', $tier);
    }
    else
    {
      $q->where('d.tier = ?', $tier);
    }

    if ($parent)
    {
      $q->leftJoin('d.Parent p')
        ->addWhere('p.name = ?', $parent);
    }

    if (!is_null($havingFields))
    {
      $q->addWhere('d.has_fields = ?', $havingFields);
    }

    return $q;
  }  

  static function getByTier($tier, $parent=null, $havingFields=null)
  {
    return self::getByTierQuery($tier, $parent, $havingFields)->execute();
  }

  static function getNamesByTier($tier, $parent=null, $havingFields=null)
  {
    $names = array();

    //var_dump(self::getByTierQuery($tier, $parent, $havingFields)->getSqlQuery()); die;
    $arys = self::getByTierQuery($tier, $parent, $havingFields)->fetchArray();
    
    foreach ($arys as $ary)
    {
      $names[] = $ary['name'];
    }
    
    return $names;
  }
  
  
  static function getNamesByParent($parent, $havingFields=null)
  {
    $names = array();

    $q = LsDoctrineQuery::create()
      ->from('ExtensionDefinition d')
      ->orderBy('d.id ASC');      

    if ($parent)
    {
      $q->leftJoin('d.Parent p')
        ->addWhere('p.name = ?', $parent);
    }

    if (!is_null($havingFields))
    {
      $q->addWhere('d.has_fields = ?', $havingFields);
    }

    $results = $q->fetchArray();
        
    foreach ($results as $ary)
    {
      $names[] = $ary['name'];
    }
    
    return $names;    
  }
}